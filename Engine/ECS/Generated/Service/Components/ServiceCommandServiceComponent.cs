//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceContext {

    public ServiceEntity commandServiceEntity { get { return GetGroup(ServiceMatcher.CommandService).GetSingleEntity(); } }
    public CommandServiceComponent commandService { get { return commandServiceEntity.commandService; } }
    public bool hasCommandService { get { return commandServiceEntity != null; } }

    public ServiceEntity SetCommandService(ICommandService newInstance) {
        if (hasCommandService) {
            throw new Entitas.EntitasException("Could not set CommandService!\n" + this + " already has an entity with CommandServiceComponent!",
                "You should check if the context already has a commandServiceEntity before setting it or use context.ReplaceCommandService().");
        }
        var entity = CreateEntity();
        entity.AddCommandService(newInstance);
        return entity;
    }

    public void ReplaceCommandService(ICommandService newInstance) {
        var entity = commandServiceEntity;
        if (entity == null) {
            entity = SetCommandService(newInstance);
        } else {
            entity.ReplaceCommandService(newInstance);
        }
    }

    public void RemoveCommandService() {
        commandServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceEntity {

    public CommandServiceComponent commandService { get { return (CommandServiceComponent)GetComponent(ServiceComponentsLookup.CommandService); } }
    public bool hasCommandService { get { return HasComponent(ServiceComponentsLookup.CommandService); } }

    public void AddCommandService(ICommandService newInstance) {
        var index = ServiceComponentsLookup.CommandService;
        var component = (CommandServiceComponent)CreateComponent(index, typeof(CommandServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceCommandService(ICommandService newInstance) {
        var index = ServiceComponentsLookup.CommandService;
        var component = (CommandServiceComponent)CreateComponent(index, typeof(CommandServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveCommandService() {
        RemoveComponent(ServiceComponentsLookup.CommandService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServiceMatcher {

    static Entitas.IMatcher<ServiceEntity> _matcherCommandService;

    public static Entitas.IMatcher<ServiceEntity> CommandService {
        get {
            if (_matcherCommandService == null) {
                var matcher = (Entitas.Matcher<ServiceEntity>)Entitas.Matcher<ServiceEntity>.AllOf(ServiceComponentsLookup.CommandService);
                matcher.componentNames = ServiceComponentsLookup.componentNames;
                _matcherCommandService = matcher;
            }

            return _matcherCommandService;
        }
    }
}
