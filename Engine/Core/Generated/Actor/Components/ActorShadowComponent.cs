//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ActorEntity {

    public Lockstep.Core.Components.Actor.ShadowComponent shadow { get { return (Lockstep.Core.Components.Actor.ShadowComponent)GetComponent(ActorComponentsLookup.Shadow); } }
    public bool hasShadow { get { return HasComponent(ActorComponentsLookup.Shadow); } }

    public void AddShadow(byte newActorIdRef) {
        var index = ActorComponentsLookup.Shadow;
        var component = (Lockstep.Core.Components.Actor.ShadowComponent)CreateComponent(index, typeof(Lockstep.Core.Components.Actor.ShadowComponent));
        component.actorIdRef = newActorIdRef;
        AddComponent(index, component);
    }

    public void ReplaceShadow(byte newActorIdRef) {
        var index = ActorComponentsLookup.Shadow;
        var component = (Lockstep.Core.Components.Actor.ShadowComponent)CreateComponent(index, typeof(Lockstep.Core.Components.Actor.ShadowComponent));
        component.actorIdRef = newActorIdRef;
        ReplaceComponent(index, component);
    }

    public void RemoveShadow() {
        RemoveComponent(ActorComponentsLookup.Shadow);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ActorMatcher {

    static Entitas.IMatcher<ActorEntity> _matcherShadow;

    public static Entitas.IMatcher<ActorEntity> Shadow {
        get {
            if (_matcherShadow == null) {
                var matcher = (Entitas.Matcher<ActorEntity>)Entitas.Matcher<ActorEntity>.AllOf(ActorComponentsLookup.Shadow);
                matcher.componentNames = ActorComponentsLookup.componentNames;
                _matcherShadow = matcher;
            }

            return _matcherShadow;
        }
    }
}
