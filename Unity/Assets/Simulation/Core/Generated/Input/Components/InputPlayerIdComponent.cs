//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Lockstep.Core.Components.Input.PlayerIdComponent playerId { get { return (Lockstep.Core.Components.Input.PlayerIdComponent)GetComponent(InputComponentsLookup.PlayerId); } }
    public bool hasPlayerId { get { return HasComponent(InputComponentsLookup.PlayerId); } }

    public void AddPlayerId(byte newValue) {
        var index = InputComponentsLookup.PlayerId;
        var component = (Lockstep.Core.Components.Input.PlayerIdComponent)CreateComponent(index, typeof(Lockstep.Core.Components.Input.PlayerIdComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerId(byte newValue) {
        var index = InputComponentsLookup.PlayerId;
        var component = (Lockstep.Core.Components.Input.PlayerIdComponent)CreateComponent(index, typeof(Lockstep.Core.Components.Input.PlayerIdComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerId() {
        RemoveComponent(InputComponentsLookup.PlayerId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherPlayerId;

    public static Entitas.IMatcher<InputEntity> PlayerId {
        get {
            if (_matcherPlayerId == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.PlayerId);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherPlayerId = matcher;
            }

            return _matcherPlayerId;
        }
    }
}
