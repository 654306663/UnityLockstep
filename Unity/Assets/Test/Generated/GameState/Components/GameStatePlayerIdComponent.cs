//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateContext {

    public GameStateEntity playerIdEntity { get { return GetGroup(GameStateMatcher.PlayerId).GetSingleEntity(); } }
    public Lockstep.Core.Components.GameState.PlayerIdComponent playerId { get { return playerIdEntity.playerId; } }
    public bool hasPlayerId { get { return playerIdEntity != null; } }

    public GameStateEntity SetPlayerId(byte newValue) {
        if (hasPlayerId) {
            throw new Entitas.EntitasException("Could not set PlayerId!\n" + this + " already has an entity with Lockstep.Core.Components.GameState.PlayerIdComponent!",
                "You should check if the context already has a playerIdEntity before setting it or use context.ReplacePlayerId().");
        }
        var entity = CreateEntity();
        entity.AddPlayerId(newValue);
        return entity;
    }

    public void ReplacePlayerId(byte newValue) {
        var entity = playerIdEntity;
        if (entity == null) {
            entity = SetPlayerId(newValue);
        } else {
            entity.ReplacePlayerId(newValue);
        }
    }

    public void RemovePlayerId() {
        playerIdEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public Lockstep.Core.Components.GameState.PlayerIdComponent playerId { get { return (Lockstep.Core.Components.GameState.PlayerIdComponent)GetComponent(GameStateComponentsLookup.PlayerId); } }
    public bool hasPlayerId { get { return HasComponent(GameStateComponentsLookup.PlayerId); } }

    public void AddPlayerId(byte newValue) {
        var index = GameStateComponentsLookup.PlayerId;
        var component = (Lockstep.Core.Components.GameState.PlayerIdComponent)CreateComponent(index, typeof(Lockstep.Core.Components.GameState.PlayerIdComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerId(byte newValue) {
        var index = GameStateComponentsLookup.PlayerId;
        var component = (Lockstep.Core.Components.GameState.PlayerIdComponent)CreateComponent(index, typeof(Lockstep.Core.Components.GameState.PlayerIdComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerId() {
        RemoveComponent(GameStateComponentsLookup.PlayerId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherPlayerId;

    public static Entitas.IMatcher<GameStateEntity> PlayerId {
        get {
            if (_matcherPlayerId == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.PlayerId);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherPlayerId = matcher;
            }

            return _matcherPlayerId;
        }
    }
}
